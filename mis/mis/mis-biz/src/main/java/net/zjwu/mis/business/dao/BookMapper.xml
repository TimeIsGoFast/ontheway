<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.zjwu.mis.business.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="net.zjwu.mis.business.model.Book" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="book_type" property="bookType" jdbcType="INTEGER" />
    <result column="publics" property="publics" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="public_date" property="publicDate" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
     <result column="descr" property="descr" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    id, book_name, author, book_type, publics, price, public_date, grade, remark, create_time, 
    pic_url
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    descr
  </sql>
  <select id="searchBook" resultMap="BaseResultMap">
  select * from t_t_book where book_name like CONCAT('%','${value}','%') or author like CONCAT('%','${value}','%')
  </select>
  
  <select id="searchBookBytype" resultMap="BaseResultMap">
   select * from t_t_book where book_type=#{key}
  </select>
  <select id="getHotBooks" resultMap="BaseResultMap">
  select * from t_t_book ORDER BY id DESC limit 10
  </select>
  
  <insert id="addUserBook">
  insert into user_book(user_id,book_id) values(#{id},#{bookId})
  </insert>
  <select id="getMybookId" resultType="java.lang.Integer">
  select id from user_book where user_id=#{userId} and book_id=#{bookId}
  </select>
  <select id="getMybooks" resultMap="BaseResultMap">
  select * from t_t_book where id in (select DISTINCT book_id from user_book where user_id=#{id})
  </select>
</mapper>